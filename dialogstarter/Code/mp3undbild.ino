#include "Arduino.h"
#include "SoftwareSerial.h"
#include "DFRobotDFPlayerMini.h"
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif


SoftwareSerial mySoftwareSerial(13,12); // RX, TX
DFRobotDFPlayerMini myDFPlayer;
U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE); 

#define tier_width 32
#define tier_height 32
static unsigned char tier_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x80, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00,
   0x60, 0x03, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00,
   0x18, 0x0c, 0x00, 0x00, 0xcc, 0x19, 0x00, 0x00,
   0xf6, 0xf1, 0xff, 0x03, 0x3e, 0xe3, 0xff, 0x07,
   0x0c, 0x06, 0xc0, 0x06, 0x00, 0x06, 0xc0, 0x06,
   0x00, 0x06, 0xc0, 0x06, 0x00, 0xfe, 0xff, 0x00,
   0x00, 0xfe, 0xff, 0x00, 0x00, 0x06, 0xc0, 0x00,
   0x00, 0x06, 0xc0, 0x00, 0x00, 0x06, 0xc0, 0x00,
   0x00, 0x06, 0xc0, 0x00, 0x00, 0x06, 0xc0, 0x00,
   0x00, 0x06, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x06, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

   #define dialogstarter_logo_width 128
#define dialogstarter_logo_height 32
static unsigned char dialogstarter_logo_bits[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x3A, 0xCF, 0x27, 0x80, 0xFC, 0xC9, 0x01, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xA0, 0xFD, 0xFF, 0x8F, 0xE3, 0xB8, 0xF1, 0x97, 0x7D, 0xFC, 
0xFF, 0x8D, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0xDF, 0xF1, 0x3C, 0xCF, 
0xF1, 0x07, 0x7E, 0xE0, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xFF, 
0xFF, 0x1C, 0xC7, 0x71, 0xEE, 0x03, 0x7E, 0xE0, 0xFF, 0xBF, 0x05, 0x00, 
0x00, 0x00, 0x00, 0xFE, 0x1F, 0xC7, 0x78, 0x1C, 0x1E, 0xF9, 0x91, 0x3F, 
0x7F, 0x05, 0x00, 0x00, 0x00, 0x80, 0xFE, 0xFF, 0xC7, 0x71, 0x8E, 0x87, 
0x1E, 0xFC, 0x81, 0x1F, 0xFC, 0xFF, 0x05, 0x00, 0x00, 0x00, 0x40, 0xFD, 
0x38, 0x8E, 0xE3, 0xF0, 0xFF, 0xF8, 0x81, 0x1F, 0xF8, 0x27, 0x00, 0x00, 
0x00, 0x60, 0xFF, 0x7F, 0xCF, 0xE3, 0x38, 0xF2, 0xF0, 0x44, 0xFE, 0xE0, 
0xF7, 0xFF, 0x2D, 0x00, 0x00, 0x00, 0x90, 0xFF, 0x71, 0x3C, 0xCF, 0xF9, 
0xF8, 0x01, 0x7F, 0xE0, 0xEF, 0x1F, 0x00, 0x00, 0x00, 0xA0, 0xFF, 0x7F, 
0x1C, 0xC7, 0x71, 0xF0, 0xFF, 0x01, 0x7E, 0xE0, 0xFF, 0xFF, 0xB7, 0x00, 
0x00, 0x00, 0xC0, 0xBF, 0xC7, 0x78, 0x9C, 0xF1, 0xFF, 0xF9, 0x81, 0x3F, 
0xF0, 0xAB, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0x78, 0x9E, 0xE3, 0x38, 
0x1C, 0xF9, 0x81, 0x1F, 0xF0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xA8, 0x3F, 
0x8F, 0xE3, 0x38, 0x7B, 0x1F, 0xFD, 0x81, 0x3F, 0xF8, 0x4B, 0x00, 0x00, 
0x00, 0x50, 0xFB, 0xFF, 0x71, 0x1C, 0x8F, 0xF1, 0xFF, 0x04, 0x7E, 0xE0, 
0xFF, 0x7F, 0x17, 0x00, 0x00, 0x00, 0xD4, 0xFF, 0x1C, 0xC7, 0x71, 0x74, 
0xFE, 0x06, 0x7E, 0xE0, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x40, 0x6A, 0xFE, 
0xE7, 0x71, 0x9C, 0x47, 0x38, 0x03, 0xFF, 0xC0, 0xFF, 0xEB, 0x0A, 0x00, 
0x00, 0x00, 0xAA, 0xFF, 0x3B, 0x1E, 0xC7, 0x18, 0x1F, 0xFC, 0x81, 0x1F, 
0xFF, 0x56, 0x02, 0x00, 0x00, 0x00, 0xA0, 0xFA, 0xCF, 0xE3, 0x38, 0x4E, 
0x04, 0xF8, 0x81, 0xBF, 0x7F, 0xA5, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFF, 
0xFF, 0x38, 0xCF, 0xF3, 0x09, 0xFC, 0x81, 0xFF, 0xFF, 0x0B, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x80, 0x7D, 0xCF, 0x71, 0x7C, 0xF0, 0x07, 0xFE, 0x76, 
0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x3E, 0x07, 
0x00, 0x6A, 0xAF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x04, 
0x00, 0x06, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xFE, 0x0C, 0x6B, 0x86, 0x07, 0xDE, 0x38, 0x1E, 0x5E, 0xB4, 
0xC7, 0x87, 0x02, 0x00, 0x00, 0x80, 0xE3, 0xCC, 0x79, 0xE7, 0x9C, 0xE7, 
0x5C, 0x9E, 0xF3, 0x8E, 0x73, 0xCC, 0x03, 0x00, 0x00, 0xC0, 0xC1, 0xEC, 
0x60, 0x36, 0xB0, 0xC1, 0xF8, 0xCC, 0xC0, 0x8E, 0x7B, 0xDF, 0x01, 0x00, 
0x00, 0x80, 0xF3, 0xEC, 0x79, 0x77, 0x9C, 0xE3, 0xEC, 0xCC, 0xF3, 0x8E, 
0xF3, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x04, 0x27, 0x82, 0x07, 0xFE, 
0x38, 0x04, 0x4F, 0x04, 0xC1, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, };


void setup()
{
  mySoftwareSerial.begin(9600);
  Serial.begin(115200);
   Wire.begin();
 u8g2.begin();

  if (!myDFPlayer.begin(mySoftwareSerial)) {  //Use softwareSerial to communicate with mp3.
    Serial.println(F("Unable to begin:"));
    Serial.println(F("1.Please recheck the connection!"));
    Serial.println(F("2.Please insert the SD card!"));
    while(true);
  }
  Serial.println(F("DFPlayer Mini online."));

  myDFPlayer.setTimeOut(500); //Set serial communictaion time out 500ms
   //----Set volume----
  myDFPlayer.volume(10);  //Set volume value (0~30).
  //----Set different EQ----
  myDFPlayer.EQ(DFPLAYER_EQ_NORMAL);
//  myDFPlayer.EQ(DFPLAYER_EQ_POP);
//  myDFPlayer.EQ(DFPLAYER_EQ_ROCK);
//  myDFPlayer.EQ(DFPLAYER_EQ_JAZZ);
//  myDFPlayer.EQ(DFPLAYER_EQ_CLASSIC);
//  myDFPlayer.EQ(DFPLAYER_EQ_BASS);
//SD Karte auslesen
myDFPlayer.outputDevice(DFPLAYER_DEVICE_SD);

}
  
  void loop()
{
  //myDFPlayer.playFolder(1, 3);  //play specific mp3 in SD:/15/004.mp3; Folder Name(1~99); File Name(1~255)
  //delay(1000);
  myDFPlayer.play(1);  //Play the first mp3
  u8g2.firstPage();
  do{
    u8g2.drawXBMP(0,0,tier_width,tier_height,tier_bits);
    delay(1000);
    }while(u8g2.nextPage());
    
  delay(10000);
  //delay(10000);
  //delay(10000);

  myDFPlayer.play(2);  //Play the first mp3
  u8g2.firstPage();
  do{
    u8g2.drawXBMP(0,0,dialogstarter_logo_width,dialogstarter_logo_height,dialogstarter_logo_bits);
    delay(1000);
    }while(u8g2.nextPage());
    
  delay(10000);
  delay(10000);
  delay(10000);
  
  
  }

  



  
